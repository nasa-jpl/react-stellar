{
  "env": {
    "browser": true,
    "es2021": true,
    "node": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:react/recommended",
    "plugin:jsx-a11y/recommended",
    "plugin:import/typescript",
    "prettier"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 12,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "plugins": ["react", "@typescript-eslint", "jsx-a11y"],
  "rules": {
    "no-undef": ["off"],
    // >>> typescript-eslint extension rules needed to support TS versions of rules
    // see https://github.com/typescript-eslint/typescript-eslint/blob/master/docs/getting-started/linting/FAQ.md#i-am-using-a-rule-from-eslint-core-and-it-doesnt-work-correctly-with-typescript-code
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": "error",
    "no-use-before-define": "off",
    // 'nofunc' option means function hoisting is still allowed
    "@typescript-eslint/no-use-before-define": ["error", "nofunc"],
    "no-shadow": "off",
    "@typescript-eslint/no-shadow": ["error"],

    "@typescript-eslint/naming-convention": [
      "error",
      { "selector": "class", "format": ["PascalCase"] }
    ],
    "@typescript-eslint/consistent-type-definitions": ["warn", "interface"],
    "@typescript-eslint/unified-signatures": ["warn"],
    "@typescript-eslint/member-ordering": [
      "warn",
      {
        "default": [
          "static-field",
          "instance-field",
          "static-method",
          "instance-method"
        ]
      }
    ],
    // enforce unix line breaks
    "linebreak-style": ["error", "unix"],

    "@typescript-eslint/ban-ts-comment": ["warn"],
    "@typescript-eslint/no-empty-interface": ["warn"],
    "consistent-return": ["warn"],
    "dot-notation": ["warn"],
    "no-else-return": ["warn", { "allowElseIf": true }],
    "no-nested-ternary": ["warn"],
    "no-param-reassign": ["warn"],
    "no-restricted-globals": ["warn"],
    "no-await-in-loop": ["warn"],
    "no-multiple-empty-lines": ["warn", { "max": 1 }],
    "object-shorthand": ["warn"],

    // >>> overly opinionated rules to disable
    "arrow-body-style": ["off"],
    "camelcase": ["off"],
    "import/extensions": ["off"],
    "import/prefer-default-export": ["off"],
    "lines-between-class-members": ["off"],
    "max-classes-per-file": ["off"],
    "prefer-destructuring": ["off"],
    "prefer-object-spread": ["off"],
    "prefer-template": ["off"],
    "prefer-arrow-callback": ["off"],
    "no-console": ["off"],
    "no-plusplus": ["off"],
    "no-underscore-dangle": ["off"],
    "spaced-comment": ["off"],
    "@typescript-eslint/no-inferrable-types": ["off"],
    "@typescript-eslint/no-empty-function": ["off"],
    "react/display-name": ["off"],
    "react/prop-types": ["off"],
    // suppress errors for missing 'import React' in files
    "react/react-in-jsx-scope": "off"
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [".ts", ".tsx"]
      },
      "typescript": {
        "alwaysTryTypes": true
      }
    },
    "react": {
      "version": "17.0.2"
    }
  },
  "ignorePatterns": ["src/stories", "*.cjs"]
}
